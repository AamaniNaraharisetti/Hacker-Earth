
We need to be greedy here !

How can we send the two costliest people there 

We have to send the two costliest people on the other side somehow, and someone has to bring them back, so we need to use the two cheapest ones. 

Two ways - Either we first send the two cheapest, bring back one of the cheap ones. Send the two costlier one and send the cheaper one back. 


Cost = A[2] + A[1] + A[n] + A[2]

Other way, is we make the cheapest one accompany both - one at a time and come back

Cost = A[n] + A[1] + A[n - 1] + A[1]. 

(although this logic has been with respect to taking the two heaviest members at a time, it need not be so. We can pick any two at random and send them on the other side.

However, the two minimum ones are special ! As they are required for all escorts. 

Sometimes it's better for the cheapest one to make two trips. Sometimes, it's better for the second one to go too. 

That is, sometimes 2*A[2] < A[n - 1] + A[1], and sometimes it isn't. However using A[3], A[4] or any other person will just increase the time.)

Now, the important thing to note here is that we are taking two because that is the capacity of the boat. . That is the maximum number of people on the boat. 

Now, n < 4, is a special case, because the heaviest and lightest people coincide. 

-------------------------------------------------------------------------------------

#include <bits/stdc++.h>

#define all(v) (v).begin(), (v).end()

using namespace std;

void solve()
{
    int no_of_people;
    scanf("%d", &no_of_people);

    vector <int> cost(no_of_people + 1, 0);
    for(int i = 0; i < no_of_people; i++)
        scanf("%d", &cost[i]);

    sort(all(cost));

    long long total_cost = 0;

    while(no_of_people >= 4)
    {
        total_cost += min(cost[2] + cost[1] + cost[no_of_people] + cost[2],
                          cost[no_of_people] + cost[1] + cost[no_of_people - 1] + cost[1]);

        no_of_people -= 2;
    }

    if(no_of_people == 3) total_cost += cost[3] + cost[1] + cost[2];

    if(no_of_people == 2) total_cost += cost[2];

    if(no_of_people == 1) total_cost += cost[1];

    printf("%lld\n", total_cost);
}

int main()
{
    int no_of_test_cases;
    scanf("%d", &no_of_test_cases);

    while(no_of_test_cases--)
        solve();

    return 0;
}

