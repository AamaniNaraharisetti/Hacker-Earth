Use a coloured sieve and mark each number with it's least prime factor.

Initially, all numbers are unmarked ... STarting from 2, pick up the first unmarked number i.

Mark i and all of i's UNMARKED multiples with i. 
Also, keep track of the count of numbers coloured i.

This allows us to answer queries in O(1) time.

----------------------------------------

vector <int> no_of_numbers_with_least_prime_factor(1e6 + 1, 0);

void precompute_prime_factors()
{
    vector <int> least_prime_factor(1e6 + 1, UNMARKED);
    
    for(int i = 2; i <= 1e6; i++)
    {
        if(least_prime_factor[i] == UNMARKED)
        {

            for(int j = i ; j <= 1e6; j += i)
            {
                if(least_prime_factor[j] == UNMARKED)
                {
                    least_prime_factor[j] = i; 
                     no_of_numbers_with_least_prime_factor[i]++;
                }
            }
        }
    }
    
}

----------------------------------------------------------

int main()
{
    int no_of_test_cases;
    scanf("%d", &no_of_test_cases);
    
    precompute_prime_factors();
    
    while(no_of_test_cases--)
    {
        int query;
        scanf("%d", &query);
        
        printf("%d\n", no_of_numbers_with_least_prime_factor[query]);
    }
        
    return 0;
}
